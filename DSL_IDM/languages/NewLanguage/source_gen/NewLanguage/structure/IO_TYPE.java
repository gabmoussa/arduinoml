package NewLanguage.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum IO_TYPE {
  INPUT("INPUT", 0),
  OUTPUT("OUTPUT", 1);

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return "" + this.myValue;
  }

  public static List<IO_TYPE> getConstants() {
    List<IO_TYPE> list = ListSequence.fromList(new LinkedList<IO_TYPE>());
    ListSequence.fromList(list).addElement(IO_TYPE.INPUT);
    ListSequence.fromList(list).addElement(IO_TYPE.OUTPUT);
    return list;
  }

  public static IO_TYPE getDefault() {
    return IO_TYPE.INPUT;
  }

  public static IO_TYPE parseValue(String value) {
    if (value == null) {
      return IO_TYPE.getDefault();
    }
    if (value.equals(IO_TYPE.INPUT.getValueAsString())) {
      return IO_TYPE.INPUT;
    }
    if (value.equals(IO_TYPE.OUTPUT.getValueAsString())) {
      return IO_TYPE.OUTPUT;
    }
    return IO_TYPE.getDefault();
  }

  private int myValue;

  IO_TYPE(String name, int value) {
    this.myName = name;
    this.myValue = value;
  }

  public int getValue() {
    return this.myValue;
  }
}
