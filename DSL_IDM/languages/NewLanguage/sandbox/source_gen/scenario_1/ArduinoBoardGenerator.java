package scenario_1;

/*Generated by MPS */


public class ArduinoBoardGenerator {


  public static void main(String[] args) {

    System.out.println("#include <ArduinoML.h>\n");

    System.out.print("arduino_ml::ArduinoBoard board");
    Boolean freqDefined = true;
    if (freqDefined) {
      System.out.print("(");
      System.out.print("0.4");
      System.out.print(")");
    }
    if (!(freqDefined)) {
      // <node> 
    }
    System.out.println(";");

    // <node> 


    // on genere le konami code ici 
    // ...konami 
    System.out.println("void setup(){");
    System.out.print("\tarduino_ml::");
    System.out.print("Led");
    System.out.print("* ");
    System.out.print("ledScenario1");
    System.out.print(" = new arduino_ml::");
    System.out.print("Led");
    System.out.print("(\"");
    System.out.print("ledScenario1");
    System.out.print("\",");
    System.out.print("11");
    if (false) {
      // <node> 
      System.out.print(",");
      System.out.print("");
      System.out.print(",");
      System.out.print("");
      // <node> 
    }
    System.out.println(");");
    System.out.print("\tarduino_ml::");
    System.out.print("Buzzer");
    System.out.print("* ");
    System.out.print("buzzerScenario1");
    System.out.print(" = new arduino_ml::");
    System.out.print("Buzzer");
    System.out.print("(\"");
    System.out.print("buzzerScenario1");
    System.out.print("\",");
    System.out.print("10");
    if (false) {
      // <node> 
      System.out.print(",");
      System.out.print("");
      System.out.print(",");
      System.out.print("");
      // <node> 
    }
    System.out.println(");");
    System.out.print("\tarduino_ml::");
    System.out.print("Button");
    System.out.print("* ");
    System.out.print("buttonScenario1");
    System.out.print(" = new arduino_ml::");
    System.out.print("Button");
    System.out.print("(\"");
    System.out.print("buttonScenario1");
    System.out.print("\",");
    System.out.print("12");
    if (false) {
      // <node> 
      System.out.print(",");
      System.out.print("");
      System.out.print(",");
      System.out.print("");
      // <node> 
    }
    System.out.println(");");

    System.out.println("");

    System.out.print("\tboard.add_actuator(");
    System.out.print("ledScenario1");
    System.out.println(");");
    System.out.print("\tboard.add_actuator(");
    System.out.print("buzzerScenario1");
    System.out.println(");");
    System.out.print("\tboard.add_actuator(");
    System.out.print("buttonScenario1");
    System.out.println(");");

    System.out.println("");

    // freq quand faut t-il le mettre? 
    // <node> 

    // crée les états et les initialises avec les actions adequates 
    System.out.print("\tarduino_ml::State* ");
    System.out.print("initScenario1");
    System.out.print(" = new arduino_ml::State(");
    System.out.print("false");
    System.out.println(");");
    System.out.print("\t");
    System.out.print("initScenario1");
    System.out.print("->add_action(");
    // TODO ajouter targer dans editor action 
    System.out.print("ledScenario1");
    System.out.print(",arduino_ml::");
    System.out.print("LOW_STATE");
    System.out.print(",");
    System.out.print("0");
    System.out.println(");");
    System.out.print("\t");
    System.out.print("initScenario1");
    System.out.print("->add_action(");
    // TODO ajouter targer dans editor action 
    System.out.print("buzzerScenario1");
    System.out.print(",arduino_ml::");
    System.out.print("LOW_STATE");
    System.out.print(",");
    System.out.print("0");
    System.out.println(");");
    System.out.println("");
    System.out.print("\tarduino_ml::State* ");
    System.out.print("pressedScenario1");
    System.out.print(" = new arduino_ml::State(");
    System.out.print("false");
    System.out.println(");");
    System.out.print("\t");
    System.out.print("pressedScenario1");
    System.out.print("->add_action(");
    // TODO ajouter targer dans editor action 
    System.out.print("ledScenario1");
    System.out.print(",arduino_ml::");
    System.out.print("HIGH_STATE");
    System.out.print(",");
    System.out.print("0");
    System.out.println(");");
    System.out.print("\t");
    System.out.print("pressedScenario1");
    System.out.print("->add_action(");
    // TODO ajouter targer dans editor action 
    System.out.print("buzzerScenario1");
    System.out.print(",arduino_ml::");
    System.out.print("HIGH_STATE");
    System.out.print(",");
    System.out.print("0");
    System.out.println(");");
    System.out.println("");

    // cree les transitions et y ajoute les conditions 
    {
      String stateName = "initScenario1";
      {
        String tmp = "transition_a0";
        System.out.print("\tarduino_ml::Transition* ");
        System.out.print(tmp);
        System.out.print(" = new arduino_ml::Transition(");
        System.out.print("pressedScenario1");
        System.out.println(");");

        // ajoute les conditions aux transitions 
        System.out.print("\t" + tmp + "->add_condition(new arduino_ml::Condition(");
        System.out.print("buttonScenario1");
        System.out.print(", arduino_ml::");
        System.out.print("HIGH_STATE");
        System.out.println("));");

        // ajoute les transitions dans les states 
        System.out.print("\t" + stateName);
        System.out.print("->add_transition(");
        System.out.print(tmp);
        System.out.print(");\n");
      }
      System.out.println("");
    }
    {
      String stateName = "pressedScenario1";
      {
        String tmp = "transition_a1";
        System.out.print("\tarduino_ml::Transition* ");
        System.out.print(tmp);
        System.out.print(" = new arduino_ml::Transition(");
        System.out.print("initScenario1");
        System.out.println(");");

        // ajoute les conditions aux transitions 
        System.out.print("\t" + tmp + "->add_condition(new arduino_ml::Condition(");
        System.out.print("buttonScenario1");
        System.out.print(", arduino_ml::");
        System.out.print("LOW_STATE");
        System.out.println("));");

        // ajoute les transitions dans les states 
        System.out.print("\t" + stateName);
        System.out.print("->add_transition(");
        System.out.print(tmp);
        System.out.print(");\n");
      }
      System.out.println("");
    }

    Boolean existKonami = false;
    if (existKonami) {
      // creation de l objet konami 
      System.out.print("\tarduino_ml::Konami* konami = new arduino_ml::Konami(");
      System.out.print("");
      System.out.print(",");
      System.out.print("");
      System.out.print(",");
      System.out.print("");
      System.out.print(",");
      System.out.print("");
      System.out.print(",");
      System.out.print("\"");
      System.out.print("");
      System.out.println("\");");
    }

    System.out.println("\tboard.init_pins();");

    if (existKonami) {
      System.out.println("\tboard.init(konami->init_state());");
    }
    if (!(existKonami)) {
      {
        Boolean firstDefined = true;
        // <node> 

        if (firstDefined) {
          String initialState = "initScenario1";
          System.out.print("\tboard.init(");
          System.out.print("initScenario1");
          System.out.println(");");
        }
      }
      {
        Boolean firstDefined = false;
        // <node> 

        if (firstDefined) {
          String initialState = "pressedScenario1";
          System.out.print("\tboard.init(");
          System.out.print("pressedScenario1");
          System.out.println(");");
        }
      }
    }
    System.out.println("}");

    System.out.println("void loop(){");
    System.out.println("\tboard.iteration();");
    System.out.println("}");
  }
}
